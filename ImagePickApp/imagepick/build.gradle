apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply from: '../androidx_compat.gradle'
apply from: '../common.gradle'

//group='com.github.LightSun'
//multi lib
group = 'com.github.LightSun.Android-ImagePick'
version = library_version

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation ('com.github.LightSun:cameraview:1.0.1-beta'){
        exclude group: 'com.android.support'
    }
}
//------------ multi lib >>> ------
task sourcesJar(type: Jar) {
    //classifier = 'sources'
    getArchiveClassifier().set('sources')
    from android.sourceSets.main.javaDirectories
}
artifacts {
    archives sourcesJar
}
//------------ multi lib  <<< ------

/*
task sourcesJar(type: Jar) {
    //classifier = 'sources'
    getArchiveClassifier().set('sources')
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
   // classifier = 'javadoc'
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}
*/
